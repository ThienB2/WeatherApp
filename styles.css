html {
    padding: 0;
    min-height: 100%;
}
body {
    padding: 2.5em;
}

/* 1. Global resets and layout */
html, body {
    margin: 0;
    display: flex; /* Flexbox layout */
    justify-content: safe center; /* Center horizontally */
    align-items: center; /* Center vertically */
    font-family: 'Roboto Slab', sans-serif;
    background: linear-gradient(#e66465, #9198e5);
    background-attachment: fixed;
    color: white;
}

#Title {
    text-align: center;
    color: rgb(60, 60, 60);
    margin-right: 1em;
    font-weight: 200;
    font-size: 1.5em;
    white-space: nowrap;
}

/* 2. Common form and error styles */
form {
    text-align: center;
}

.error {
    border: 2px solid red;
    border-radius: 4px;
}

/* 3. Main container */
.container-all {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: rgba(255, 255, 255, 0.65);
    padding: 0.2em 1em;
    border-radius: 40px;
    box-shadow: 0px 1px 7px rgba(0, 0, 0, 0.25);
}

/* Top container with the search bar and title */
.container-top {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    min-width: 500px;
    flex-shrink: 0;
}

/* 
    4. The results container (.container-mid):
       - Use max-height & overflow: hidden for a smooth expand/collapse.
       - Initially hidden: max-height = 0, opacity = 0.
       - On .show, transitions to some large max-height, opacity = 1.
*/
.container-mid {
    width: 30em;
    background-color: rgba(255, 255, 255, 0.1);
    color: inherit;
    border-radius: 20px;
    box-shadow: 0px 1px 7px rgba(0,0,0, 0.25);

    /* Smooth expand/collapse logic */
    max-height: 0;
    opacity: 0;
    overflow: hidden;
    pointer-events: none;
    
    /* Animate both max-height & opacity */
    transition: max-height 1.2s ease, opacity 1s ease;
}

/* When shown, we expand the container to a large enough max-height */
.container-mid.show {
    max-height: 800px; /* Enough to reveal all content */
    opacity: 1;
    pointer-events: auto;
    /* If you want extra top/bottom padding to appear gradually, 
       you can add them here or unify with the base. */
    padding: 0.5em 1em;
    margin-bottom: 0.75em;
}

.container-mid-t {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    width: 100%;
}

.container-mid-tl {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    flex: 1;
    min-width: 0;
}

.container-mid-tr {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: flex-start;
    flex: 1;
    min-width: 0;
    margin-top: -9em; /* If you still need this offset */
    margin-right: 1em;
}

#forecast {
    display: flex;
    flex-direction: row;        
    align-items: center;        
    flex-wrap: nowrap;          
    width: 30em;      
    /* margin-top: 1em;     
    margin-bottom: 1em; */

    /* Smooth expand/collapse logic */
    max-height: 0;
    opacity: 0;
    overflow: hidden;
    pointer-events: none;
    
    /* Animate both max-height & opacity */
    transition: max-height 1.2s ease, opacity 1s ease;
}

#forecast.show {
    max-height: 800px; /* Enough to reveal all content */
    opacity: 1;
    pointer-events: auto;
    /* If you want extra top/bottom padding to appear gradually, 
       you can add them here or unify with the base. */
    padding: 0.5em 0;
    margin-bottom: 0.75em;
}

.forecast-temp {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    flex-wrap: nowrap;
}

.forecast-day {
    display: flex;
    flex-direction: column;    
    align-items: center;
    justify-content: center;
    margin: 0 1em;              
    padding: 1em;
    background-color: rgba(255, 255, 255, 0.1);
    color: inherit;                
    border-radius: 20px;
    box-shadow: 0px 1px 7px rgba(0,0,0, 0.25);
    transition: transform 0.3s ease, background-color 0.3s ease;
}

.forecast-day p {
    color: rgb(60, 60, 60);
}

.forecast-day:hover {
    transform: translateY(-5px);
    background-color: rgba(255, 255, 255, 0.1);
}

#forecast {
    position: relative;        /* So we can position hover zones absolutely */
    width: 30em;              /* Set a fixed width so overflow can occur */
    height: 15em;             /* Adjust to suit your forecast card height */
    overflow: hidden;         /* Hide anything that scrolls “outside” */
    /* margin: 1em auto;         Center if you like */
}

/* The slider that contains all forecast-day cards horizontally */
.forecast-slider {
    display: flex;            /* All items in a row */
    transition: transform 0.8s ease;
    /* The total width should accommodate all forecast-day items */
    width: 200%; /* If you have 5 items each 20% wide; adjust as needed */
}

/* Each forecast-day can have a fixed or percentage-based width */
.forecast-day {
    flex: 0 0 17.5%;  /* 5 items -> 20% each; or use a fixed width in px/em */
    box-sizing: border-box;
    margin: 1em;
    /* ... your existing forecast-day styles ... */
}

.hover-zone {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 10%;             /* Half of the container’s width */
    z-index: 9999;            /* Above the slider so it can capture hover */
    background-color: rgba(255, 0, 0, 0); /* Fully transparent, for demo */
}

/* Left zone sits on the left half */
.hover-zone.left {
    left: 0;
}

/* Right zone sits on the right half */
.hover-zone.right {
    right: 0;
}

/* 
    SHIFT THE SLIDER TO THE RIGHT WHEN HOVERING ON THE LEFT ZONE
    (This example resets to 'translateX(0)' or some offset if you prefer.)
*/
.hover-zone.left:hover ~ .forecast-slider {
    transform: translateX(10%);
}

/* 
    SHIFT THE SLIDER TO THE LEFT WHEN HOVERING ON THE RIGHT ZONE 
    (Adjust the value so you see the last items. For example, -50% or in px.)
*/
.hover-zone.right:hover ~ .forecast-slider {
    transform: translateX(-43.5%);
}

/* Error message styling */
#errorMessage {
    display: none;
    margin: 1em auto;
    padding: 0.5em 1em;
    background-color: rgba(255, 0, 0, 0.1);
    color: red;
    border: 1px solid red;
    border-radius: 5px;
    width: fit-content;
    text-align: center;
}

#errorMessage.show {
    display: block;
    animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

/* 5. Weather fields */
#city {
    display: block;
    text-align: left;
    font-size: 1.5em;
    font-weight: 500;
    color: rgb(58, 58, 58);
}

#iconTemp {
    display: flex;
    flex-direction: horizontal;
    align-items: left;
    justify-content: left;
    margin-bottom: 1em;
}

#icon {
    display: block;
    text-align: left;
    font-size: 1em;
    font-weight: bold;
    color: rgb(58, 58, 58);
    margin-right: 1.25em;
}

#temp {
    font-size: 2em;
    text-align: left;
    display: block;
    margin: -0.5em;
    color: rgb(58, 58, 58);
    margin-top: -0.3em;    
}

#wind, #humidity, #feels-like, #minmax, #desc {
    text-align: left;
    display: block;
    font-weight: 100;
    margin-top: -1.5em;
    margin-left: 1em;
    color: rgb(58, 58, 58);
}

#timezone {
    text-align: right;
    display: block;
    font-weight: 100;
    margin-top: -2.0em;
    color: rgb(58, 58, 58);
}

/* 7. Search form styling */
#searchForm {
    display: flex;
    align-items: center;
    border: 1px solid #ccc;
    border-radius: 20px;
    background-color: #f5f5f5;
    padding: 5px 10px;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
    width: 50%;
    max-width: 250px;
    transition: ease-in-out 0.3s;
}

#searchForm:hover {
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
    scale: 1.02;
    border-color: rgb(104, 112, 209);
    border-width: 1.5px;
}

#Textbox {
    border: none;
    outline: none;
    flex-grow: 1;
    /* font-size: px; */
    background: none;
    color: #333;
}

#Textbox::placeholder {
    color: #888;
}

#Button {
    border: none;
    background: none;
    outline: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
}

#Button .material-symbols-outlined {
    font-size: 20px;
    color: #555;
}

/* 8. Footer */
#footer {
    font-size: 0.75em;
    text-align: center;
    position: fixed;
    left: 0;
    bottom: 0;
    width: 100%;
    color: white;
    text-align: center;
}
